@use "sass:math";

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Don\'t use units when using the rem() function; only numbers.';
  }
}

@function em($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + em;
  } @else {
    @error 'Don\'t use units when using the em() function; only numbers.';
  }
}

@mixin hover {
  @media (hover: hover) {
    @content;
  }
}

@mixin reducedMotion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// breakpoints
// 700px, 900px, 1440px
$breakpoints-up: (
  "medium": em(700),
  "large": em(900),
  "xlarge": em(1440),
);

// 699.98px, 899.98px, 1339.98px
$breakpoints-down: (
  "small": em(699.98),
  "medium": em(899.98),
  "large": em(1339.98),
);

@mixin breakpoint-up($size) {
  @media (min-width: map-get($breakpoints-up, $size)) {
    @content;
  }
}

@mixin breakpoint-down($size) {
  @media (max-width: map-get($breakpoints-down, $size)) {
    @content;
  }
}
